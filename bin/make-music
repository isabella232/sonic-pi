#!/bin/bash

# make-music
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://opensource.org/licenses/MIT
#
# Starts make-music with a progress dialog.
# If a make-music instance is already running, give it the focus and exit.
# Progress dialog requests focus all the time so it doesn't get obscured by overlapping windows.
#


APPNAME="Make Music - default"
DIALOG_TITLE="Make Music"
PIDFILE=/tmp/start-make-music.pid
SONG_DIR=/usr/share/make-music/songs
CHALLENGE_DIR=/usr/share/make-music/challenges
CONTENT_DIR=/home/$USER/Music-content
WORKSPACE_DIR=/home/$USER/.make-music/workspaces/default

# Workspaces to be created first time Make-Music is launched
init()
{
    # Creating workspace directories
    mkdir -pv $WORKSPACE_DIR/one
    mkdir -pv $WORKSPACE_DIR/two
    mkdir -pv $WORKSPACE_DIR/three
    mkdir -pv $WORKSPACE_DIR/four
    mkdir -pv $WORKSPACE_DIR/five
    mkdir -pv $WORKSPACE_DIR/six

    # Creating workspaces
    cp $CHALLENGE_DIR/Challenge1.spi $WORKSPACE_DIR/one/1.spi
    cp $CHALLENGE_DIR/Challenge2.spi $WORKSPACE_DIR/two/1.spi
    cp $CHALLENGE_DIR/Challenge3.spi $WORKSPACE_DIR/three/1.spi
    cp $CHALLENGE_DIR/Challenge4.spi $WORKSPACE_DIR/four/1.spi
    cp $CHALLENGE_DIR/Challenge5.spi $WORKSPACE_DIR/five/1.spi
    cp $CHALLENGE_DIR/Challenge6.spi $WORKSPACE_DIR/six/1.spi
}

# save the time at which make-music starts
time_start=$(date +%s)

# save make-music usage times in kanotracker, and
# remove temporary pid file always at exit time
cleanup()
{
    # compute time difference since we started ($time_start)
    time_elapsed_secs=`date -d @$(($(date +%s)-$time_start)) +"%s"`
    kano-profile-cli increment_app_runtime sonic-pi $time_elapsed_secs

    if [ -f $PIDFILE ]; then
        rm $PIDFILE
    fi
}
trap cleanup EXIT

# Check content directory
if [ ! -d $CONTENT_DIR ]; then
    # Creating content directory
    mkdir -pv $CONTENT_DIR
    # Copy songs
    cp -r $SONG_DIR $CONTENT_DIR
    # Copy challenges
    cp -r $CHALLENGE_DIR $CONTENT_DIR
fi
# Check workspaces
if [ ! -d $WORKSPACE_DIR ]; then
    init
fi

# Avoid multiple make-music instances
if [ -f $PIDFILE ]; then
    # Make music is already starting
    exit 0
else
    touch $PIDFILE
fi

/usr/share/make-music/app/gui/make-music &
MUSICPID=$!
sleep 2

# Create progress dialog with Zenity
(
  echo "#Make Music powered by Sonic Pi is loading..."
  i=0 ; while [ "$i" -lt 100 ]; do
     echo "$i"
     i=$(($i+1))
     sleep 0.05
  done

  kano-window-tool -t "$APPNAME" -m -dno
  echo "#Ready"
  sleep 1
  echo "100"
  ) |
zenity --progress --no-cancel --text="" --width=300 --height=90 --auto-close --timeout=30 --auto-kill

if [ "$?" = -1 ] ; then
    zenity --error
    --text="Start failed."
fi

exit $MUSICPID
