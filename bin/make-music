#!/bin/bash

# make-music
#
# Copyright (C) 2013 Kano Computing Ltd.
# License:   http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# Starts make-music with a progress dialog.
# If a make-music instance is already running, give it the focus and exit.
# Progress dialog requests focus all the time so it doesn't get obscured by overlapping windows.
#

APPNAME="Make Music - default"
DIALOG_TITLE="Make Music"
PIDFILE=/tmp/start-make-music.pid
CONTENT_DIR=/home/$USER/Music-content

# Workspaces to be created first time Make-Music is launched
function init() 
{
    WORKSPACE_DIR=/home/$USER/.make-music/workspaces/default

    # Creating workspace directories
    mkdir -pv $WORKSPACE_DIR/one
    mkdir -pv $WORKSPACE_DIR/two
    mkdir -pv $WORKSPACE_DIR/three
    mkdir -pv $WORKSPACE_DIR/four
    mkdir -pv $WORKSPACE_DIR/five
    mkdir -pv $WORKSPACE_DIR/six

    # Creating workspaces
    touch $WORKSPACE_DIR/one/1.spi
    touch $WORKSPACE_DIR/two/1.spi
    touch $WORKSPACE_DIR/three/1.spi
    touch $WORKSPACE_DIR/four/1.spi
    touch $WORKSPACE_DIR/five/1.spi
    touch $WORKSPACE_DIR/six/1.spi

    # Creating content directory
    mkdir -pv $CONTENT_DIR
}

# remove temporary pid file always at exit time
function cleanup {

    if [ -f $PIDFILE ]; then
        rm $PIDFILE
    fi
}
trap cleanup EXIT

# First time Make-Music is launched, call init() 
if [ ! -d $CONTENT_DIR ]; then
    init
fi

# Avoid multiple make-music instances
if [ -f $PIDFILE ]; then
    # Make music is already starting
    exit 0
else
    touch $PIDFILE
fi

wdata=`xwininfo -root -tree | grep "$APPNAME"`
rc=$?
if [ $rc -eq 0 ]; then
    # $APPNAME is already running, raising focus
    wid=`echo $wdata | awk '{print $1}'`
    xdotool windowraise $wid
    exit 1
fi

/usr/share/make-music/app/gui/make-music &
MUSICPID=$!

# Create progress dialog with Zenity
(
echo "#Make Music powered by Sonic Pi is loading..."

for I in 10 20 30 40 50 60 70 80 90 95 96 97 98 99; do
    sleep 1
    xwininfo -root -tree | grep "$APPNAME"
    rc=$?

    dialogid=`xwininfo -name "$DIALOG_TITLE" |grep "Window id:" | awk '{print $4}'`
    if [ $? -eq 0 ] ; then
	    xdotool windowraise $dialogid
    fi

    if [ $rc -eq 0 ]; then
        kano-window-tool -t "$APPNAME" -m -dno
        echo "99"
        echo "#Ready"
        sleep 3
        break
    fi
    echo "$I"
done

if [ $rc -ne 0 ]; then
    echo "#$DIALOG_TITLE could not be started - RC=$rc"
    sleep 3
fi

echo "100"
) |
zenity --progress --no-cancel --text="" --width=300 --height=90 --auto-close --timeout=30 --auto-kill

if [ "$?" = -1 ] ; then
    zenity --error
    --text="Start failed."
fi

exit $MUSICPID
